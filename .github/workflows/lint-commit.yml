name: Lint Commit

on:
  pull_request:
    branches: [ master ]

jobs:
  lint-shellcheck:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Runs shell script static analysis
        run: |
          sudo apt-get install shellcheck
          ./run-tests.sh --check-shellscript

  lint-commit-quality:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch-depth is needed to get the full list of commits
          # necessary for commit msg linting when a PR has 2 commits or more
          # to avoid getting ALL the commits, we get current commits + origin
          fetch-depth: ${{ github.event.pull_request.commits }} + 1
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Checking commit quality (messages, signatures, spelling checks, etc)
        env:
          GIT_HEAD: ${{ github.event.after }}
          GIT_ORIGIN: ${{ github.event.pull_request.base.sha }}
        run: sh ./scripts/ci/prebuild.sh

  lint-check-manifest:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Check Python manifest completeness
        run: |
          pip install check-manifest
          ./run-tests.sh --check-manifest

  lint-pydocstyle:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Check compliance with Python docstring conventions
        run: |
          pip install pydocstyle
          ./run-tests.sh --check-pydocstyle
